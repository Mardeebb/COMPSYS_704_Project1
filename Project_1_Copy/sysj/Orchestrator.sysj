import run.BottleTwin;


Orchestrator(
		input BottleTwin signal newBottleTwin;
		input signal request, conveyorMoved, rotTableTurned, filled, capLoaded;
		
		output signal recieveTwin, startConveyor, startRotTable, startFilling, startCapLoading, capperBottleOut;
		output BottleTwin signal bottlePos0, bottlePos1, bottlePos2, bottlePos3, bottlePos4, bottlePos5, bottlePos6, bottlePos7, bottlePos8, bottlePos9;
		output int signal bottlePos0B, bottlePos1B, bottlePos2B, bottlePos3B, bottlePos4B, bottlePos5B, bottlePos6B, bottlePos7B, bottlePos8B, bottlePos9B;
		)
->{	
	
	BottleTwin signal posZeroUpdate, posOneUpdate, posTwoUpdate, posThreeUpdate, posFourUpdate, posFiveUpdate, posSixUpdate, posSevenUpdate, posEightUpdate, posNineUpdate;
	signal filling, capLoading, startRobotLoader, startConveyorThread, startRotThread, startCapLoaderThread;
	{
		while(true){
			await(newBottleTwin);
		    System.err.println("Orchestrator newBottleTwin ");
			BottleTwin b = (BottleTwin)#newBottleTwin;
			
			if(b != null) {
				int ID = b.ID;
				String name = b.name;
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + b);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + ID);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + name);
//				emit posEight(b);
//				await(request);
//				await(posEightLeft);
				emit posZeroUpdate(b);
				pause;
				pause;
				await(!bottlePos0);
				await(request);
				// emit recieve conformation to the backend
				await(!newBottleTwin);
				emit recieveTwin;
			}
		}
	}
	
	||
	
	{
		while(true) {
			await(startRobotLoader);
			// wait for plant update first
			BottleTwin bZero = (BottleTwin)#posZeroUpdate;
			BottleTwin bFive = (BottleTwin)#posFiveUpdate;
			
			emit posZeroUpdate(null);
			emit posFiveUpdate(null);
			emit posOneUpdate(bZero);
			emit posSevenUpdate(bFive);

			
		}
	}

	
	||
	
	{
		while(true) {
			await(startConveyorThread);
			// wait for plant update first
			BottleTwin bZero = (BottleTwin)#posZeroUpdate;
			BottleTwin bFive = (BottleTwin)#posFiveUpdate;
			
			emit posZeroUpdate(null);
			emit posFiveUpdate(null);
			emit posOneUpdate(bZero);
			emit posSevenUpdate(bFive);

			
		}
	}
	
	
	
	
	
	
	||
	
	// sustain bottlepos0 when bottle arrives
	{
		while(true){
			BottleTwin b = (BottleTwin)#posZeroUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posZeroUpdate){
					emit bottlePos0B(id);
					sustain bottlePos0(b);
				}
			} else {
				emit bottlePos0B(-1);
			}
		}	
	}
	
	||
	
	{
		while(true){
			BottleTwin b = (BottleTwin)#posOneUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posOneUpdate){
					emit bottlePos1B(id);
					sustain bottlePos1(b);
				}
			} else {
				emit bottlePos1B(-1);
			}
		}	
	}
	
	||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posTwoUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posTwoUpdate){
					emit bottlePos2B(id);
					sustain bottlePos2(b);
				}
			} else {
				emit bottlePos2B(-1);
			}
		}	
			
	}
	
	||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posThreeUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posThreeUpdate){
					emit bottlePos3B(id);
					sustain bottlePos3(b);
				}
			} else {
				emit bottlePos3B(-1);
			}
		}	
	}
	
		||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posFourUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posFourUpdate){
					emit bottlePos4B(id);
					sustain bottlePos4(b);
				}
			} else {
				emit bottlePos4B(-1);
			}
		}	
	}
		
		||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posFiveUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posFiveUpdate){
					emit bottlePos5B(id);
					sustain bottlePos5(b);
				}
			} else {
				emit bottlePos5B(-1);
			}
		}	
	}
		
		||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posSixUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posSixUpdate){
					emit bottlePos6B(id);
					sustain bottlePos6(b);
				}
			} else {
				emit bottlePos6B(-1);
			}
		}	
	}
		
		||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posSevenUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posSevenUpdate){
					emit bottlePos7B(id);
					sustain bottlePos7(b);
				}
			} else {
				emit bottlePos7B(-1);
			}
		}	
	}
		
		||

	{
		while(true){
			BottleTwin b = (BottleTwin)#posEightUpdate;
			int id = b.ID;
			pause;
			if (b != null) {
				abort(posEightUpdate){
					emit bottlePos8B(id);
					sustain bottlePos8(b);
				}
			} else {
				emit bottlePos8B(-1);
			}
		}	
	}
		
		||

	{
		while(true){
			pause;
			BottleTwin b = (BottleTwin)#posNineUpdate;
			int id = b.ID;
			if (b != null) {
				abort(posNineUpdate){
					emit bottlePos9B(id);
					sustain bottlePos9(b);
				}
			} else {
				emit bottlePos9B(-1);
			}
		}	
	}


}
