import run.BottleTwin;


Orchestrator(
		input BottleTwin signal newBottleTwin;
		input signal request, conveyorMoved;
		output signal recieveTwin, moveConveyor;
		output BottleTwin signal bottlePos0, bottlePos1, bottlePos2, bottlePos3, bottlePos4, bottlePos5, bottlePos6, bottlePos7, bottlePos8;
		)
->{	
	BottleTwin signal posZero, posOne, posTwo, posThree, posFour, posFive, posSix, posSeven, posEight;
	signal posZeroLeft, posOneLeft, posTwoLeft, posThreeLeft, posFourLeft, posFiveLeft, posSixLeft, posSevenLeft, posEightLeft;

	{
		while(true){
		    System.err.println("new Orchestrator Cycle");

			await(newBottleTwin);
		    System.err.println("newBottleTwin ");

			BottleTwin b = (BottleTwin)#newBottleTwin;
			if(b != null) {
				int ID = b.ID;
				String name = b.name;
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + b);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + ID);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + name);
			    await(!newBottleTwin);
//				emit posEight(b);
//				await(request);
//				await(posEightLeft);
				emit posZero(b);
				await(posZeroLeft);
				await(request);

				emit recieveTwin;
			}
		}
	}
	
	||
	
	//conveyor control
	{
		await(posZero);
		while(true){
			BottleTwin b = (BottleTwin)#posZero;
			emit moveConveyor;
			await(conveyorMoved);
			emit posTwo(b);
			emit posZeroLeft;
			await(posOneLeft && posZero);
			}
	}
	
	||
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// sustain bottlepos0 when bottle arrives
	{
		while(true){
			await(posZero);
			BottleTwin b = (BottleTwin)#posZero;
//			abort(posZeroLeft){
//				sustain bottlePos0(b);
//			}
			emit bottlePos0(b);
			await(posZeroLeft);

//			emit bottlePos0(null);
		}
	}
	
	||
	
	{
		while(true){
			await(posOne);
			BottleTwin b = (BottleTwin)#posOne;
			abort(posOneLeft){
				sustain bottlePos1(b);
			}
			emit bottlePos1(null);
		}
	}
	
	||

	{
		while(true){
			await(posTwo);
			BottleTwin b = (BottleTwin)#posTwo;
//			abort(posOneLeft){
//				sustain bottlePos2(b);
//				
//			}
//			emit bottlePos2(null);
			emit bottlePos2(b);
			await(posTwoLeft);

		}
			
	}

}
