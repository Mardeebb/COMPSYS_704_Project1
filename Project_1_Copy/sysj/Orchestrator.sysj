import run.BottleTwin;


Orchestrator(
		input BottleTwin signal newBottleTwin;
		input signal request, conveyorMoved, rotTableTurned, filled, capOn;
		
		output signal recieveTwin, moveConveyor, turnRotTable, fillerBottleOut, startFilling, startCapOn, capperBottleOut;
		output BottleTwin signal bottlePos0, bottlePos1, bottlePos2, bottlePos3, bottlePos4, bottlePos5, bottlePos6, bottlePos7, bottlePos8;
		)
->{	
	BottleTwin signal posZero, posOne, posTwo, posThree, posFour, posFive, posSix, posSeven, posEight;
	signal posZeroLeft, posOneLeft, posTwoLeft, posThreeLeft, posFourLeft, posFiveLeft, posSixLeft, posSevenLeft, posEightLeft;
	signal rotTurn;
	
	signal filling, capLoading, startRotThread, startCapLoaderThread;
	{
		while(true){
		    System.err.println("new Orchestrator Cycle");

			await(newBottleTwin);
		    System.err.println("newBottleTwin ");

			BottleTwin b = (BottleTwin)#newBottleTwin;
			if(b != null) {
				int ID = b.ID;
				String name = b.name;
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + b);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + ID);
			    System.out.println("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOo " + name);
//				emit posEight(b);
//				await(request);
//				await(posEightLeft);
				emit posZero(b);
				await(posZeroLeft);
				await(request);
				// emit recieve conformation to the backend
				await(!newBottleTwin);
				emit recieveTwin;
			}
		}
	}
	
	||
	
	//conveyor control
	{
		await(posZero);
		while(true){
			BottleTwin b = (BottleTwin)#posZero;
			if (b != null) {
				emit moveConveyor;
				await(conveyorMoved);
				emit posOne(b);
				emit posZeroLeft;
				{
				    await(rotTableTurned);
				}
					||
				{
				    await(posZero);
				}
			}else {
				pause;
			}
		}
	}
	
	||
	
	//rotable control
	{
		while(true){
			await(posOne);
			await(!filling);
			await(!capLoading);
//			await(request);
			emit turnRotTable;
			BottleTwin b1 = (BottleTwin)#posOne;
			BottleTwin b2 = (BottleTwin)#posTwo;
			BottleTwin b3 = (BottleTwin)#posThree;
			BottleTwin b4 = (BottleTwin)#posFour;
			BottleTwin b5 = (BottleTwin)#posFive;
			BottleTwin b6 = (BottleTwin)#posSix;
			emit posOne(b6);
			emit posTwo(b1);
			emit posThree(b2);
			emit posFour(b3);
			emit posFive(b4);
			emit posSix(null);

			await(rotTableTurned);
			emit fillerBottleOut;
			emit capperBottleOut;
//			pause;
			
			pause;
			emit rotTurn;

		}
	}
	
	||

	// filler control
	{
		while(true){
			await(posTwo);
			emit startFilling;
			abort(filled){
				sustain filling;
			}
		}
	}

	||

	// caploader control
	{
		while(true){
			await(posThree);
			BottleTwin b3 = (BottleTwin)#posThree;
			if(b3 == null) {
				break;
			}
			emit startCapOn;
			abort(capOn){
				sustain capLoading;
			}
		}
	}

	
	
	||
	
	
	
	
	
	
	
	// sustain bottlepos0 when bottle arrives
	{
		while(true){
			await(posZero);
			BottleTwin b = (BottleTwin)#posZero;
			if (b != null) {
				emit bottlePos0(b);
			}
			pause;
		}
	}
	
	||
	
	{
		while(true){
			await(posOne);
			BottleTwin b = (BottleTwin)#posOne;
			if (b != null) {
				emit bottlePos1(b);
			}
			pause;
		}
	}
	
	||

	{
		while(true){
			await(posTwo);
			BottleTwin b = (BottleTwin)#posTwo;
			if (b != null) {
			emit bottlePos2(b);
			}
			pause;
		}
			
	}
	
	||

	{
		while(true){
			await(posThree);
			BottleTwin b = (BottleTwin)#posThree;
			if (b != null) {
			emit bottlePos3(b);
			}
			pause;
		}
	}
	
		||

	{
		while(true){
			await(posFour);
			BottleTwin b = (BottleTwin)#posFour;
			if (b != null) {
			emit bottlePos4(b);
			}
			pause;
		}		
	}
		
		||

	{
		while(true){
			await(posFive);
			BottleTwin b = (BottleTwin)#posFive;
			if (b != null) {
			emit bottlePos5(b);
			}
			pause;
		}	
	}
		
		||

	{
		while(true){
			await(posSix);
			BottleTwin b = (BottleTwin)#posSix;
			if (b != null) {
			emit bottlePos6(b);
			}
			pause;
		}	
	}
		
		||

	{
		while(true){
			await(posSeven);
			BottleTwin b = (BottleTwin)#posSeven;
			if (b != null) {
			emit bottlePos7(b);
			}
			pause;
		}	
	}
		
		||

	{
		while(true){
			await(posEight);
			BottleTwin b = (BottleTwin)#posEight;
			if (b != null) {
			emit bottlePos8(b);
			}
			pause;
		}	
	}
		


}
