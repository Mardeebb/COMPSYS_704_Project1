Orchestrator(
		input signal conveyorStatus, fillerStatus, capperStatus, rotaryTableStatus;
		input signal capLoaderStatus, robotLoaderStatus, robotUnloaderStatus;
		output signal rotaryTableRequest;
		)
->{
	System.out.println("Orchestrator");
	{
		while(true) {
			emit rotaryTableRequest;
			
			pause;
		}
	}
}

FillerController(
		input signal bottleAtPos2, dosUnitEvac, dosUnitFilled, fillerRequest;
		)
-> {
	System.out.println("Filler");
	{
		
	}
}



RotaryTableController(
		input signal rotaryTableRequest;
		input signal enable, tableAlignedWithSensorC;
		output signal rotaryTableTrigger;
		)
->{
/* TODO: Write control-logic */
    System.out.println("Rotary table controller started");
	{
		// pusher control
		while(true){
			await(enable);
			abort(tableAlignedWithSensorC){
				sustain rotaryTableTrigger;
			}
			await(!enable);
		}
	}
}

	


