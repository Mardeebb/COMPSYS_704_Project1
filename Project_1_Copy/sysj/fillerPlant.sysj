import run.BottleTwin;

fPlant(
    input signal valveInjectorOnOff, valveInletOnOff, dosUnitValveRetract, dosUnitValveExtend;
    input signal enable, bottleOut;
    input BottleTwin signal bottleIn;
    
    output signal bottleAtPos2, dosUnitEvac, dosUnitFilled;
    output signal dosUnitEvacE, dosUnitFilledE;
    output int signal fillID;
)
-> {
	BottleTwin signal bottle;
    // Bottle at position 2 
    {
        while(true){
            // For now simulate bottle always available when enabled
            await(bottleIn);
            
			BottleTwin b = (BottleTwin)#bottleIn;
			emit bottle(b);
            abort(bottleOut){
                sustain bottleAtPos2;
            }
            
        }
    }
    ||

    //  canister unit 
    {
        while(true){
            // Retract = canister up
            abort(dosUnitValveRetract && enable){
                sustain  dosUnitEvac;  // at top
            }
            await(!enable);

            // Extend = canister down
            abort(dosUnitValveExtend && enable){
                sustain dosUnitFilled;    // at bottom
            }
            await(!enable);
			BottleTwin b = (BottleTwin)#bottle;
			int id = b.ID;
			emit fillID(id);
			}
    }
        ||

    // To viz (for GUI signals) 
    {
        {while(true){present(dosUnitEvac){emit dosUnitEvacE;} pause;}}
        ||
        {while(true){present(dosUnitFilled){emit dosUnitFilledE;} pause;}}

    }

}

