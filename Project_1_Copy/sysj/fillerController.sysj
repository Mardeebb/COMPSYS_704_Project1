import run.BottleTwin;

fController(
		input BottleTwin signal bottleAtPos2;
		input signal dosUnitEvac, dosUnitFilled, startFilling;
		// input signal fillerRequest
		output signal valveInjectorOnOff, valveInletOnOff, dosUnitValveRetract, dosUnitValveExtend, filled; 
		// output signal fillerStatus, bottleStatus; 
		)
->{
	System.out.println("filler Controller started");
	{

	  while (true) {
	    await(startFilling);             // new bottle at P2
	    await(bottleAtPos2);
		BottleTwin b = (BottleTwin)#bottleAtPos2;
		if(b != null) {
			while(true) {
				System.err.println(b.recipe[0]);
				System.err.println(b.recipe[1]);
				System.err.println(b.recipe[2]);
				System.err.println(b.recipe[3]);
				System.err.println(b.recipe[4]);

			}
		}

	    // Phase 1: go up & inject until TOP
	    abort(dosUnitFilled) {
	    	{
	  	      	sustain dosUnitValveRetract;
	    	}
	    		||
	    	{
	    		sustain valveInjectorOnOff;
	    	}
	    }
	    pause;                            
	
	    // Phase 2: open inlet & go down until BOTTOM
	    abort(dosUnitEvac) {
	    	{
	  	      	sustain dosUnitValveExtend;
	    	}
	    		||
	    	{
	    		sustain valveInletOnOff;
	    	}
	    }
	    pause;
	    // fill second liquid
	    // Phase 1: go up & inject until TOP
	    abort(dosUnitFilled) {
	    	{
	  	      	sustain dosUnitValveRetract;
	    	}
	    		||
	    	{
	    		sustain valveInjectorOnOff;
	    	}
	    }
	    pause;                            
	
	    // Phase 2: open inlet & go down until BOTTOM
	    abort(dosUnitEvac) {
	    	{
	  	      	sustain dosUnitValveExtend;
	    	}
	    		||
	    	{
	    		sustain valveInletOnOff;
	    	}
	    }
	    pause;
	    
	    emit filled;
	  }
	}

}
