CapLoaderController(
		input signal pusherRetracted,pusherExtended,WPgripped,armAtSource,armAtDest,empty,request;
		output signal pusherExtend,vacOn,armSource,armDest;
		input Integer signal mode;
		input signal pusherExtendM,vacOnM,armSourceM,armDestM;
		)
->{
	System.out.println("Cap Loader CD");
	{
		while(true ) {
			pause;
		}
	}
}

CapperController (
		input signal bottleAtPos4, gripperZAxisLowered, gripperZAxisLifted;
		input signal gripperTurnHomePos, gripperTurnFinalPos;
		
		output signal cylPos5ZaxisExtend, gripperTurnRetracted, gripperTurnExtend, capGripperPos5Extend;
		output signal cylClampBottleExtend;
		)
-> {
	System.out.println("Capper CD");
	{
		{
			while(true) {
				// wait until bottle is at position 4
				await(bottleAtPos4);
				
				pause;
				// clamp bottle and lower gripper
				abort(gripperZAxisLowered) {
					{sustain cylClampBottleExtend;} || {sustain cylPos5ZaxisExtend;}
				}
				
				
				pause;
				// grip the cap when gripper lowered
				present(gripperZAxisLowered) {
					abort(gripperTurnFinalPos) {
						{sustain capGripperPos5Extend;} || {sustain gripperTurnExtend;}
					}
					
				}
				
			}
		}
	}
}


RotaryTableController(
		input signal enable, tableAlignedWithSensorC ;
		output signal rotaryTableTrigger;
		
		input Boolean channel rotaryTableRequest;
		output String channel rotaryTableStatus;
		)
->{
    System.out.println("Rotary Table started");
	{
		// pusher control
		while(true){
			receive rotaryTableRequest;
			System.out.println("Request received");
			await(enable);
			abort(tableAlignedWithSensorC){
				sustain rotaryTableTrigger;
			}
			System.out.println("Aborted");
			await(!enable);
		}
	}
}
	


